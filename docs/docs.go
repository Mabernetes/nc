// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Marsh Meg",
            "url": "https://t.me/marshmeg",
            "email": "uraevdmitrij031@gmail.com"
        },
        "license": {
            "name": "MI"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/configs/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Show configs tree",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/services.ConfigFile"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/configs/:deployment/:pod": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Show config file",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ComposeFile"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "put": {
                "description": "POST == PUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Save or update config file",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "POST == PUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Save or update config file",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/status/runner": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "Show runner status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/services.DeploymentStatusData"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/status/server": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "Show server status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.ServerStatusData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "services.ConfigFile": {
            "type": "object",
            "properties": {
                "deployment": {
                    "type": "string"
                },
                "pod": {
                    "type": "string"
                }
            }
        },
        "services.DeploymentStatusData": {
            "type": "object",
            "properties": {
                "started": {
                    "type": "integer"
                },
                "stopped": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "services.ServerStatusData": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "object",
                    "properties": {
                        "max": {
                            "type": "integer"
                        },
                        "use": {
                            "type": "integer"
                        }
                    }
                },
                "disk": {
                    "type": "object",
                    "properties": {
                        "max": {
                            "type": "integer"
                        },
                        "use": {
                            "type": "integer"
                        }
                    }
                },
                "mem": {
                    "type": "object",
                    "properties": {
                        "max": {
                            "type": "integer"
                        },
                        "use": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "utils.ComposeFile": {
            "type": "object",
            "properties": {
                "networks": {
                    "type": "object",
                    "additionalProperties": true
                },
                "services": {
                    "type": "object",
                    "additionalProperties": true
                },
                "volumes": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "localhost:9000",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "M8s Node Controller API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
